{"version":3,"file":"static/js/492.002ded31.chunk.js","mappings":"iUAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6oBAsBVE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,4FAMJI,EAAYJ,EAAAA,GAAAA,IAAH,qLAKTK,EAAQL,EAAAA,GAAAA,IAAH,mLAQLM,EAAYN,EAAAA,GAAAA,GAAH,iIAOTO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,yjBAkBVS,EAAQT,EAAAA,GAAAA,GAAH,iD,SCtDLU,EAAe,WAAO,IAAD,IAC9B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAgBxB,IAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEUC,EAAAA,EAAAA,IAAaP,GAFvB,OAELQ,EAFK,OAGXT,EAASS,GAHE,gDAKXC,QAAQC,IAAR,MALW,qGAAH,qDAUpBJ,GACC,GAAE,CAACN,KAECF,EACD,OAAO,SAACH,EAAD,sDAGX,IACAgB,EAMIb,EANJa,eACAC,EAKId,EALJc,YACAC,EAIIf,EAJJe,SACAC,EAGIhB,EAHJgB,aACAC,EAEIjB,EAFJiB,aACAC,EACIlB,EADJkB,OAGMC,EAAO,IAAIC,KAAKJ,GAEhBK,EAAU,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAQI,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAExD,OACA,6BACI,UAAC7B,EAAD,CAAY8B,GAAE,oBAAErB,EAASsB,QAAQC,aAAnB,aAAE,EAAwBC,YAA1B,QAAkC,IAAhD,WACI,SAACtC,EAAD,IADJ,cAGA,UAACE,EAAD,YACI,gBACAqC,IAAG,yCAAoCf,GACvCgB,IAAKjB,EACLkB,MAAM,WAEN,UAACtC,EAAD,YACI,UAACC,EAAD,WACKmB,EADL,KACuBM,EAAKa,cAD5B,QAGA,0BACI,uCADJ,IACwBC,KAAKC,MAAqB,GAAfjB,GADnC,QAGA,wBACI,wCAEJ,uBAAIF,KACJ,wBACI,sCAEJ,uBAAIM,WAGZ,oDACA,SAAClC,EAAD,CAAYsC,GAAG,OAAf,mBACA,SAACtC,EAAD,CAAYsC,GAAG,UAAf,sBACA,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAIX,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n    display: inline-flex;\n    align-items: center;\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    color: black;\n    font-weight: 700;\n    margin-bottom: 12px;\n    margin-top: 12px;\n    margin-right: 12px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover {\n        box-shadow: 0px 5px 1px 0px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    }\n    &.active {\n        color: white;\n        background-color: orangered;\n    }\n`;\nexport const Icon = styled(HiArrowLeft)`\n    color: black;\n    text-align: center;\n    margin-right: 5px;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Wrapp = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-left: 20px;\n    font-weight: 400;\n    font-size: 20px;\n`;\nexport const MovieName = styled.h2`\n    font-size: 36px;\n    padding: 4px;\n    margin-top: 8px;\n    margin-bottom: 0;\n    color: black;\n`;\nexport const GoBackLink = styled(Link)`\n    display: inline-flex;\n    align-items: center;\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    color: black;\n    font-weight: 700;\n    margin-bottom: 12px;\n    margin-top: 12px;\n    margin-right: 12px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover {\n        box-shadow: 0px 5px 1px 0px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    }\n`;\nexport const Title = styled.h1`\n    text-align: center;\n`;","import { Suspense, useEffect, useState, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { fetchMovieId } from 'services/TheMovieAPI';\nimport { Loader } from 'components/Loader';\nimport {\n    Container,\n    Icon,\n    MovieName,\n    StyledLink,\n    Wrapp,\n    GoBackLink,\n    Title,\n} from './MovieDetails.styled';\n\n\nexport const MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    const location = useRef(useLocation());\n\n    useEffect(() => {\n        const fatchMovie = async () => {\n            try {\n                const result = await fetchMovieId(movieId);\n                setMovie(result);\n            } catch (error) {\n                console.log(error);\n            } finally {\n        }\n    };\n\n    fatchMovie();\n    }, [movieId]);\n\n    if (!movie) {\n        return <Title>Something went wrong, please try again!</Title>;\n    }\n\n    const {\n    original_title,\n    poster_path,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n    } = movie;\n\n    const date = new Date(release_date);\n\n    const genresList = genres?.map(({ name }) => name).join(', ');\n\n    return (\n    <main>\n        <GoBackLink to={location.current.state?.from ?? '/'}>\n            <Icon />Go back\n        </GoBackLink>\n        <Container>\n            <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={original_title}\n            width=\"300px\"\n            />\n            <Wrapp>\n                <MovieName>\n                    {original_title} ({date.getFullYear()})\n                </MovieName>\n                <p>\n                    <b>User score:</b> {Math.round(vote_average * 10)}%\n                </p>\n                <p>\n                    <b> Overview</b>\n                </p>\n                <p>{overview}</p>\n                <p>\n                    <b> Genres</b>\n                </p>\n                <p>{genresList}</p>\n            </Wrapp>\n        </Container>\n        <h2>Additional information</h2>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n        <Suspense fallback={<Loader />}>\n            <Outlet />\n        </Suspense>\n    </main>\n    );\n};"],"names":["StyledLink","styled","NavLink","Icon","HiArrowLeft","Container","Wrapp","MovieName","GoBackLink","Link","Title","MovieDetails","useState","movie","setMovie","movieId","useParams","location","useRef","useLocation","useEffect","fatchMovie","fetchMovieId","result","console","log","original_title","poster_path","overview","release_date","vote_average","genres","date","Date","genresList","map","name","join","to","current","state","from","src","alt","width","getFullYear","Math","round","Suspense","fallback","Loader"],"sourceRoot":""}