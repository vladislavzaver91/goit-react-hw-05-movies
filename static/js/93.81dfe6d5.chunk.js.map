{"version":3,"file":"static/js/93.81dfe6d5.chunk.js","mappings":"oRAEaA,EAAWC,EAAAA,EAAAA,GAAH,kJAQRC,EAAWD,EAAAA,EAAAA,GAAH,mQAURE,EAAWF,EAAAA,EAAAA,EAAH,mIAORG,EAAWH,EAAAA,EAAAA,EAAH,4G,SCtBRI,EAAO,WAChB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,gHAEaC,EAAAA,EAAAA,IAAeJ,GAF5B,gBAEFF,EAFE,EAEFA,KACRC,EAAQD,GAHE,gDAKVO,QAAQC,IAAR,MALU,yDAAH,qDASfH,GACH,GAAE,CAACH,IAEgB,IAAhBF,EAAKS,QAEL,SAACZ,EAAD,qDAKJ,SAACJ,EAAD,UACKO,EAAKU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACjC,OACA,UAACnB,EAAD,YACI,gBACAoB,IAAG,yCAAoCH,GACvCI,IAAKH,KAEL,UAACjB,EAAD,YACI,mCACCiB,MAEL,UAACjB,EAAD,YACI,uCACCkB,OAXMH,EAelB,KAGR,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 224px);\n    gap: 12px;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const CardItem = styled.li`\n    border-radius: 4px;\n    list-style: none;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    > a {\n        text-decoration: none;\n    }\n`;\n\nexport const CastName = styled.p`\n    text-align: center;\n    margin: 0 auto;\n    padding: 4px;\n    margin-bottom: 0;\n    color: black;\n`;\nexport const CastInfo = styled.p`\n    padding: 4px;\n    margin-bottom: 0;\n    font-weight: 700;\n    color: black;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCastMovie } from 'services/TheMovieAPI';\nimport { CardItem, CastList, CastName, CastInfo } from './Cast.styled';\n\nexport const Cast = () => {\n    const [cast, setCast] = useState([]);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fatchCast = async () => {\n            try {\n                const { cast } = await fetchCastMovie(movieId);\n                setCast(cast);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        fatchCast();\n    }, [movieId]);\n\n    if (cast.length === 0) {\n        return (\n        <CastInfo>We don't have any cast for this movie</CastInfo>\n    );\n};\n\n    return (\n    <CastList>\n        {cast.map(({ id, profile_path, name, character }) => {\n            return (\n            <CardItem key={id}>\n                <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                />\n                <CastName>\n                    <b> Name: </b>\n                    {name}\n                </CastName>\n                <CastName>\n                    <b>Character: </b>\n                    {character}\n                </CastName>\n            </CardItem>\n        );\n        })}\n    </CastList>\n    );\n};"],"names":["CastList","styled","CardItem","CastName","CastInfo","Cast","useState","cast","setCast","movieId","useParams","useEffect","fatchCast","fetchCastMovie","console","log","length","map","id","profile_path","name","character","src","alt"],"sourceRoot":""}